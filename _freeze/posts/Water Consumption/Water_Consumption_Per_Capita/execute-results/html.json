{
  "hash": "6d4d2dfecfccceb7f42c7400544e603c",
  "result": {
    "markdown": "---\ntitle: \"Wateromics 2015\"\nauthor: \"Marwa Elsayed\"\ndate: \"2023-10-10\"\ncategories: [Assignments, Data Description]\noutput: \n  html_document:\n    code_folding: hide\n---\n\n\nFor this assignment, we will explore how water consumption varies by median household income across U.S. counties for the year 2015, on a per capita basis.\n\nFocusing on three sectors: domestic, industrial, and irrigation. The research question is: How is 2015 per capita water use in domestic, industrial, and irrigation sectors correlated with median household income across U.S. counties?\n\n**The plan is as follows:**\n\n1.  Segment water use data by sector (domestic, industrial, irrigation).\n\n2.  Extract median household income and population data.\n\n3.  Merge datasets.\n\n4.  Compute per capita water use for each sector.\n\n5.  Conduct correlation analysis between per capita water use and median household income across sectors.\n\nFor water data, [here](https://www.sciencebase.gov/catalog/item/get/5af3311be4b0da30c1b245d8) For income data, [Census Data on Income and Poverty](https://data.census.gov/table/ACSST1Y2015.S1903?t=Income+and+Poverty&g=010XX00US,$0500000&y=2015)\n\n## Reading the Datasets\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse) \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tidyverse' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tibble' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.0     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(readxl) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwaterusage <- read.csv(\"usco2015v2.0.csv\", skip = 1)\nwaterdatadictionary <- read_excel(\"usco2015v2.0.xlsx\", sheet = \"DataDictionary\") \nincomedata <- read.csv(\"ACSST1Y2015.S1903-Data.csv\", skip = 1)\n```\n:::\n\n\n## **Segment Water Use Data by Sector**\n\n### Relevant Variables to Domestic Use:\n\n1.  **DO.WFrTo**: The total self-supplied withdrawals, which is a comprehensive measure of domestic water use without public supply.\n\n2.  **DO.SSPCp**: This is the per capita self-supplied water use. It's already normalized by population and will be useful for direct comparisons.\n\n3.  **DO.PSPCp**: This is the per capita use for publicly supplied water, another useful metric when normalized by population.\n\n4.  **DO.WDelv**: This is the total use, which includes both withdrawals and deliveries. It's the most comprehensive measure of water use at the domestic level.\n\n    Depending on the granularity of the analysis, we can either focus on the most comprehensive measure (DO-WDelv) or break it down to see if self-supplied vs. publicly supplied makes a difference in the correlation with income (DO-SSPCp and DO-PSPCp).\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndomestic_data <- waterusage %>%\n  select(STATE, STATEFIPS, COUNTY, COUNTYFIPS, FIPS, YEAR, `TP.TotPop`, \n         `DO.WFrTo`, `DO.SSPCp`, `DO.PSPCp`, `DO.WDelv`)\n# rename the columns to something more descriptive\ndomestic_data <- domestic_data %>%\n  rename(\n    State_Abbrev = STATE,\n    State_FIPS = STATEFIPS,\n    County_Name = COUNTY,\n    County_FIPS = COUNTYFIPS,\n    State_County_FIPS = FIPS,\n    Data_Year = YEAR,\n    Total_Population = `TP.TotPop`,\n    Domestic_Total_Self_Supplied = `DO.WFrTo`,\n    Domestic_Per_Capita_Self_Supplied = `DO.SSPCp`,\n    Domestic_Per_Capita_Publicly_Supplied = `DO.PSPCp`,\n    Domestic_Total_Use = `DO.WDelv`\n  )\n```\n:::\n\n\n### Relevant Variables to Industrial Use:\n\n1.  IN.WGWTo: This gives you the total self-supplied groundwater withdrawals, both fresh and saline. It will provide a comprehensive look at groundwater use.\n\n2.  IN.WSWTo: Similarly, this variable gives you the total self-supplied surface-water withdrawals, including both fresh and saline water. This will cover all surface-water usage.\n\n3.  IN.Wtotl: This is the most comprehensive measure that includes both groundwater and surface-water, fresh and saline. It gives you a full picture of industrial water use.\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    industrial_data <- waterusage %>%\n      select(STATE, STATEFIPS, COUNTY, COUNTYFIPS, FIPS, YEAR,`TP.TotPop`,\n             `IN.WGWTo`, `IN.WSWTo`, `IN.Wtotl`)\n    # rename the columns to something more descriptive\n    industrial_data <- industrial_data %>%\n      rename(\n        State_Abbrev = STATE,\n        State_FIPS = STATEFIPS,\n        County_Name = COUNTY,\n        County_FIPS = COUNTYFIPS,\n        State_County_FIPS = FIPS,\n        Data_Year = YEAR,\n        Total_Population = `TP.TotPop`,\n        Industrial_Total_Groundwater = `IN.WGWTo`,\n        Industrial_Total_SurfaceWater = `IN.WSWTo`,\n        Industrial_Total_Water = `IN.Wtotl`\n      )\n    ```\n    :::\n\n\n### Relevant Variables to Irrigation Use:\n\n1.  IR.WFrTo: Total water withdrawals for irrigation, covering both groundwater and surface water, provides a comprehensive metric.\n\n2.  IR.RecWW: This gives an idea of how much reclaimed water is being used, which could be an interesting aspect related to sustainability.\n\n3.  IR.IrTot: This will provide the total acres irrigated, useful for understanding the scale of irrigation in different counties.\n\n4.  IC.WFrTo: If you're also interested in specifying crop irrigation, this variable will be useful. It gives total water withdrawals specifically for crop irrigation.\n\n5.  IG.WFrTo: For irrigation in golf courses, this variable provides total withdrawals and can help in understanding non-agricultural irrigation demands.\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    irrigation_data <- waterusage %>%\n      select(STATE, STATEFIPS, COUNTY, COUNTYFIPS, FIPS, YEAR, `TP.TotPop`,\n             `IR.WFrTo`, `IR.RecWW`, `IR.IrTot`, `IC.WFrTo`, `IG.WFrTo`)\n    # renaming columns for better readability\n    irrigation_data <- irrigation_data %>%\n      rename(\n        State_Abbrev = STATE,\n        State_FIPS = STATEFIPS,\n        County_Name = COUNTY,\n        County_FIPS = COUNTYFIPS,\n        State_County_FIPS = FIPS,\n        Data_Year = YEAR,\n        Total_Population = `TP.TotPop`,\n        Total_Irrigation_Withdrawal = `IR.WFrTo`,\n        Reclaimed_Water_Irrigation = `IR.RecWW`,\n        Total_Acres_Irrigated = `IR.IrTot`,\n        Crop_Irrigation_Withdrawal = `IC.WFrTo`,\n        Golf_Irrigation_Withdrawal = `IG.WFrTo`\n      )\n    ```\n    :::\n\n\n## **Income and Demographic Dataset**\n\nChoosing the relevant variables for merging and analysis\n\n1.  Geography: The field labeled 'Geography' contains coded identifiers for different locations.\n\n2.  Geographic.Area.Name: This could be useful for merging the datasets based on location.\n\n3.  Median.income..dollars...Estimate..Households: This variable provides the median income, which is a mian point in the research question.\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    # selecting relevant variables from the income data\n    selected_incomedata <- incomedata %>%\n      select(Geography, Geographic.Area.Name, `Median.income..dollars...Estimate..Households`)\n    \n    # cleaning the Geographic.Area.Name to remove the state name and comma\n    selected_incomedata$Geographic.Area.Name <- gsub(\",.*$\", \"\", selected_incomedata$Geographic.Area.Name)\n    \n    # renaming columns for better readability\n    selected_incomedata <- selected_incomedata %>%\n      rename(\n        State_County_FIPS = Geography,\n        AreaName = Geographic.Area.Name,\n        MedianHouseholdIncome = `Median.income..dollars...Estimate..Households`\n      )\n    # remove prefix and extract relevant FIPS from the GeoCode, The ? in the regular expression makes the last \"0\" optional\n    library(stringr)\n    selected_incomedata$State_County_FIPS <- str_replace_all(selected_incomedata$State_County_FIPS, \"0500000US0?\", \"\")\n    ```\n    :::\n\n\n## Integrity checks before merging\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# since I will be using State_County_Fips for mergeing, it will be used for the the integrity checks\n\n# checking missing values\nsapply(list(domestic_data, selected_incomedata, industrial_data, irrigation_data), function(df) sum(is.na(df$State_County_FIPS)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0 0 0 0\n```\n:::\n\n```{.r .cell-code}\n# checking for duplicates\nsapply(list(domestic_data, selected_incomedata, industrial_data, irrigation_data), function(df) anyDuplicated(df$State_County_FIPS))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0 0 0 0\n```\n:::\n\n```{.r .cell-code}\n# checking for consistency in datatype\nstr(domestic_data$State_County_FIPS)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n int [1:3223] 1001 1003 1005 1007 1009 1011 1013 1015 1017 1019 ...\n```\n:::\n\n```{.r .cell-code}\nstr(selected_incomedata$State_County_FIPS)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n chr [1:831] \"0100000US\" \"1003\" \"1015\" \"1043\" \"1049\" \"1051\" \"1055\" \"1069\" ...\n```\n:::\n\n```{.r .cell-code}\nstr(industrial_data$State_County_FIPS)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n int [1:3223] 1001 1003 1005 1007 1009 1011 1013 1015 1017 1019 ...\n```\n:::\n\n```{.r .cell-code}\nstr(irrigation_data$State_County_FIPS)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n int [1:3223] 1001 1003 1005 1007 1009 1011 1013 1015 1017 1019 ...\n```\n:::\n\n```{.r .cell-code}\n#addressing the incosistency to make it all integers\nselected_incomedata$State_County_FIPS <- as.integer(selected_incomedata$State_County_FIPS)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: NAs introduced by coercion\n```\n:::\n:::\n\n\n## Merging the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmerged_data <- domestic_data %>%\n  inner_join(selected_incomedata, by = \"State_County_FIPS\") %>%\n  inner_join(industrial_data, by = \"State_County_FIPS\") %>%\n  inner_join(irrigation_data, by = \"State_County_FIPS\")\n```\n:::\n\n\n## Graphs\n\n\n::: {.cell}\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}