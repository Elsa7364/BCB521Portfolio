{
  "hash": "d5980e21003b905e15972abeeddced48",
  "result": {
    "markdown": "---\ntitle: \"Assignment 3\"\nauthor: \"Marwa\"\ndate: \"2023-09-17\"\ncategories: [Assignments, Data Description]\n---\n\n\n### 1. Data Identification and Justification\n\nDataset Chosen: Global YouTube Statistics 2023, from Kaggle\n\nThe dataset offers a detailed look at successful YouTube channels, tracking metrics like subscribers, views, and earnings. It's great for studying issues in online media, like how a channel's age impacts its follower count or if its earnings are linked to its home country's unemployment rate.\n\nResearch Questions:\n\n-   Does the unemployment rate in a country correlate with the earnings of YouTube channels originating from that area?\n\n-   How is the rate of college enrollment in a country connected to the types of popular YouTube channels from that place?\n\n-   Is there a link between how urbanized a country is and the number of views its YouTube channels get?\n\nHypotheses:\n\nH1: There is a significant correlation between a country's 'Unemployment.rate' and the 'highest_yearly_earnings' of YouTube channels based in that country.\n\nH2: Countries with higher 'Gross.tertiary.education.enrollment' rates will have more popular YouTube channels in the 'Education' category.\n\nH3: YouTube channels from countries with higher 'Urban_population' rates will have higher 'video_views'.\n\n### 2. Data Import and Preliminary Analysis\n\n#### Import the dataset\n\n\n::: {.cell}\n\n```{.r .cell-code}\nyoutube_data <- read.csv(\"Global YouTube Statistics.csv\", header = TRUE)\nhead(youtube_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  rank                   Youtuber subscribers  video.views         category\n1    1                   T-Series   245000000 228000000000            Music\n2    2             YouTube Movies   170000000            0 Film & Animation\n3    3                    MrBeast   166000000  28368841870    Entertainment\n4    4 Cocomelon - Nursery Rhymes   162000000 164000000000        Education\n5    5                  SET India   159000000 148000000000            Shows\n6    6                      Music   119000000            0              nan\n                       Title uploads       Country Abbreviation  channel_type\n1                   T-Series   20082         India           IN         Music\n2              youtubemovies       1 United States           US         Games\n3                    MrBeast     741 United States           US Entertainment\n4 Cocomelon - Nursery Rhymes     966 United States           US     Education\n5                  SET India  116536         India           IN Entertainment\n6                      Music       0           nan          nan         Music\n  video_views_rank country_rank channel_type_rank\n1                1            1                 1\n2          4055159         7670              7423\n3               48            1                 1\n4                2            2                 1\n5                3            2                 2\n6          4057944          NaN               NaN\n  video_views_for_the_last_30_days lowest_monthly_earnings\n1                        2.258e+09                  564600\n2                        1.200e+01                       0\n3                        1.348e+09                  337000\n4                        1.975e+09                  493800\n5                        1.824e+09                  455900\n6                              NaN                       0\n  highest_monthly_earnings lowest_yearly_earnings highest_yearly_earnings\n1                  9.0e+06                6.8e+06               1.084e+08\n2                  5.0e-02                4.0e-02               5.800e-01\n3                  5.4e+06                4.0e+06               6.470e+07\n4                  7.9e+06                5.9e+06               9.480e+07\n5                  7.3e+06                5.5e+06               8.750e+07\n6                  0.0e+00                0.0e+00               0.000e+00\n  subscribers_for_last_30_days created_year created_month created_date\n1                        2e+06         2006           Mar           13\n2                          NaN         2006           Mar            5\n3                        8e+06         2012           Feb           20\n4                        1e+06         2006           Sep            1\n5                        1e+06         2006           Sep           20\n6                          NaN         2013           Sep           24\n  Gross.tertiary.education.enrollment.... Population Unemployment.rate\n1                                    28.1 1366417754              5.36\n2                                    88.2  328239523             14.70\n3                                    88.2  328239523             14.70\n4                                    88.2  328239523             14.70\n5                                    28.1 1366417754              5.36\n6                                     NaN        NaN               NaN\n  Urban_population Latitude Longitude\n1        471031528 20.59368  78.96288\n2        270663028 37.09024 -95.71289\n3        270663028 37.09024 -95.71289\n4        270663028 37.09024 -95.71289\n5        471031528 20.59368  78.96288\n6              NaN      NaN       NaN\n```\n:::\n:::\n\n\n#### Basic EDA\n\nSummary stats to get mean, median, min, max, and quartiles. Dim function to check the number of rows and columns. Str to understand the structure of the data. And using the sum function to check for missing values.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(youtube_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      rank         Youtuber          subscribers         video.views       \n Min.   :  1.0   Length:995         Min.   : 12300000   Min.   :0.000e+00  \n 1st Qu.:249.5   Class :character   1st Qu.: 14500000   1st Qu.:4.288e+09  \n Median :498.0   Mode  :character   Median : 17700000   Median :7.761e+09  \n Mean   :498.0                      Mean   : 22982412   Mean   :1.104e+10  \n 3rd Qu.:746.5                      3rd Qu.: 24600000   3rd Qu.:1.355e+10  \n Max.   :995.0                      Max.   :245000000   Max.   :2.280e+11  \n                                                                           \n   category            Title              uploads           Country         \n Length:995         Length:995         Min.   :     0.0   Length:995        \n Class :character   Class :character   1st Qu.:   194.5   Class :character  \n Mode  :character   Mode  :character   Median :   729.0   Mode  :character  \n                                       Mean   :  9187.1                     \n                                       3rd Qu.:  2667.5                     \n                                       Max.   :301308.0                     \n                                                                            \n Abbreviation       channel_type       video_views_rank   country_rank   \n Length:995         Length:995         Min.   :      1   Min.   :   1.0  \n Class :character   Class :character   1st Qu.:    323   1st Qu.:  11.0  \n Mode  :character   Mode  :character   Median :    916   Median :  51.0  \n                                       Mean   : 554249   Mean   : 386.1  \n                                       3rd Qu.:   3584   3rd Qu.: 123.0  \n                                       Max.   :4057944   Max.   :7741.0  \n                                       NA's   :1         NA's   :116     \n channel_type_rank video_views_for_the_last_30_days lowest_monthly_earnings\n Min.   :   1.0    Min.   :1.000e+00                Min.   :     0         \n 1st Qu.:  27.0    1st Qu.:2.014e+07                1st Qu.:  2700         \n Median :  65.5    Median :6.408e+07                Median : 13300         \n Mean   : 745.7    Mean   :1.756e+08                Mean   : 36886         \n 3rd Qu.: 139.8    3rd Qu.:1.688e+08                3rd Qu.: 37900         \n Max.   :7741.0    Max.   :6.589e+09                Max.   :850900         \n NA's   :33        NA's   :56                                              \n highest_monthly_earnings lowest_yearly_earnings highest_yearly_earnings\n Min.   :       0         Min.   :       0       Min.   :        0      \n 1st Qu.:   43500         1st Qu.:   32650       1st Qu.:   521750      \n Median :  212700         Median :  159500       Median :  2600000      \n Mean   :  589808         Mean   :  442257       Mean   :  7081814      \n 3rd Qu.:  606800         3rd Qu.:  455100       3rd Qu.:  7300000      \n Max.   :13600000         Max.   :10200000       Max.   :163400000      \n                                                                        \n subscribers_for_last_30_days  created_year  created_month       created_date  \n Min.   :      1              Min.   :1970   Length:995         Min.   : 1.00  \n 1st Qu.: 100000              1st Qu.:2009   Class :character   1st Qu.: 8.00  \n Median : 200000              Median :2013   Mode  :character   Median :16.00  \n Mean   : 349079              Mean   :2013                      Mean   :15.75  \n 3rd Qu.: 400000              3rd Qu.:2016                      3rd Qu.:23.00  \n Max.   :8000000              Max.   :2022                      Max.   :31.00  \n NA's   :337                  NA's   :5                         NA's   :5      \n Gross.tertiary.education.enrollment....   Population        Unemployment.rate\n Min.   :  7.60                          Min.   :2.025e+05   Min.   : 0.750   \n 1st Qu.: 36.30                          1st Qu.:8.336e+07   1st Qu.: 5.270   \n Median : 68.00                          Median :3.282e+08   Median : 9.365   \n Mean   : 63.63                          Mean   :4.304e+08   Mean   : 9.279   \n 3rd Qu.: 88.20                          3rd Qu.:3.282e+08   3rd Qu.:14.700   \n Max.   :113.10                          Max.   :1.398e+09   Max.   :14.720   \n NA's   :123                             NA's   :123         NA's   :123      \n Urban_population       Latitude        Longitude      \n Min.   :    35588   Min.   :-38.42   Min.   :-172.10  \n 1st Qu.: 55908316   1st Qu.: 20.59   1st Qu.: -95.71  \n Median :270663028   Median : 37.09   Median : -51.93  \n Mean   :224214982   Mean   : 26.63   Mean   : -14.13  \n 3rd Qu.:270663028   3rd Qu.: 37.09   3rd Qu.:  78.96  \n Max.   :842933962   Max.   : 61.92   Max.   : 138.25  \n NA's   :123         NA's   :123      NA's   :123      \n```\n:::\n\n```{.r .cell-code}\ndim(youtube_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 995  28\n```\n:::\n\n```{.r .cell-code}\nstr(youtube_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t995 obs. of  28 variables:\n $ rank                                   : int  1 2 3 4 5 6 7 8 9 10 ...\n $ Youtuber                               : chr  \"T-Series\" \"YouTube Movies\" \"MrBeast\" \"Cocomelon - Nursery Rhymes\" ...\n $ subscribers                            : int  245000000 170000000 166000000 162000000 159000000 119000000 112000000 111000000 106000000 98900000 ...\n $ video.views                            : num  2.28e+11 0.00 2.84e+10 1.64e+11 1.48e+11 ...\n $ category                               : chr  \"Music\" \"Film & Animation\" \"Entertainment\" \"Education\" ...\n $ Title                                  : chr  \"T-Series\" \"youtubemovies\" \"MrBeast\" \"Cocomelon - Nursery Rhymes\" ...\n $ uploads                                : int  20082 1 741 966 116536 0 1111 4716 493 574 ...\n $ Country                                : chr  \"India\" \"United States\" \"United States\" \"United States\" ...\n $ Abbreviation                           : chr  \"IN\" \"US\" \"US\" \"US\" ...\n $ channel_type                           : chr  \"Music\" \"Games\" \"Entertainment\" \"Education\" ...\n $ video_views_rank                       : int  1 4055159 48 2 3 4057944 5 44 630 8 ...\n $ country_rank                           : num  1 7670 1 2 2 NaN 3 1 5 5 ...\n $ channel_type_rank                      : num  1 7423 1 1 2 ...\n $ video_views_for_the_last_30_days       : num  2.26e+09 1.20e+01 1.35e+09 1.98e+09 1.82e+09 ...\n $ lowest_monthly_earnings                : num  564600 0 337000 493800 455900 ...\n $ highest_monthly_earnings               : num  9.0e+06 5.0e-02 5.4e+06 7.9e+06 7.3e+06 ...\n $ lowest_yearly_earnings                 : num  6.8e+06 4.0e-02 4.0e+06 5.9e+06 5.5e+06 ...\n $ highest_yearly_earnings                : num  1.08e+08 5.80e-01 6.47e+07 9.48e+07 8.75e+07 ...\n $ subscribers_for_last_30_days           : num  2e+06 NaN 8e+06 1e+06 1e+06 NaN NaN NaN 1e+05 6e+05 ...\n $ created_year                           : num  2006 2006 2012 2006 2006 ...\n $ created_month                          : chr  \"Mar\" \"Mar\" \"Feb\" \"Sep\" ...\n $ created_date                           : num  13 5 20 1 20 24 12 29 14 23 ...\n $ Gross.tertiary.education.enrollment....: num  28.1 88.2 88.2 88.2 28.1 NaN 88.2 63.2 81.9 88.2 ...\n $ Population                             : num  1.37e+09 3.28e+08 3.28e+08 3.28e+08 1.37e+09 ...\n $ Unemployment.rate                      : num  5.36 14.7 14.7 14.7 5.36 NaN 14.7 2.29 4.59 14.7 ...\n $ Urban_population                       : num  4.71e+08 2.71e+08 2.71e+08 2.71e+08 4.71e+08 ...\n $ Latitude                               : num  20.6 37.1 37.1 37.1 20.6 ...\n $ Longitude                              : num  79 -95.7 -95.7 -95.7 79 ...\n```\n:::\n\n```{.r .cell-code}\nsum(is.na(youtube_data))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1291\n```\n:::\n:::\n\n\n##### Some Data Visualization\n\nScatter plot for 'Unemployment.rate' and 'highest_yearly_earnings'\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nggplot(youtube_data, aes(x = Unemployment.rate, y = highest_yearly_earnings)) +\n  geom_point() +\n  geom_smooth(method = \"lm\") +\n  ggtitle(\"Correlation Between Unemployment Rate and Highest Yearly Earnings\") +\n  xlab(\"Unemployment Rate\") +\n  ylab(\"Highest Yearly Earnings\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 123 rows containing non-finite values (`stat_smooth()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 123 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nHeatmap for 'Gross.tertiary.education.enrollment....' and 'category'\n\n\n::: {.cell}\n\n```{.r .cell-code}\neducation_category <- table(youtube_data$Gross.tertiary.education.enrollment, youtube_data$category)\nheatmap(as.matrix(education_category))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nScatter plot for 'Urban_population' and 'video.views'\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(youtube_data, aes(x = Urban_population, y = video.views)) +\n  geom_point() +\n  geom_smooth(method = \"lm\") +\n  ggtitle(\"Correlation Between Urban Population and Video Views\") +\n  xlab(\"Urban Population\") +\n  ylab(\"Video Views\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 123 rows containing non-finite values (`stat_smooth()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 123 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n**Preliminary Insights** Based on the summary, what stood out to me is that the 'created_year' for the channel named 'YouTube' shows 1970, even though YouTube was founded in 2005. This could be a placeholder or error. Since it's an isolated case, it's unlikely to significantly impact the overall analysis, but it should be acknowledged.\n\nAlso, the median of 17,700,000 in 'subscribers' suggests that half of the YouTubers have fewer subscribers than this number.\n\nEarnings display huge variability, ranging from zero to 16.34 million, which could be an intriguing focus for analysis.\n\nThere are 1291 missing values found across various variables in the dataset. This could affect the reliability of running any analyses or models.\n\n**Immediate Steps:**\n\n1.  Address missing data issues.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Bar chart for missing values\nmissing_values <- sapply(youtube_data, function(x) sum(is.na(x)))\nbarplot(missing_values, main = \"Missing Values by Variable\", xlab = \"Variables\", ylab = \"Number of Missing Values\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n2.  Consider normalizing variables with large ranges for easier comparison.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Box plot for 'video.views', 'subscribers', and 'highest_yearly_earnings' (Before normalization)\nlibrary(reshape2)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'reshape2' was built under R version 4.2.3\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'tidyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:reshape2':\n\n    smiths\n```\n:::\n\n```{.r .cell-code}\nggplot(gather(youtube_data, variable, value, video.views, subscribers, highest_yearly_earnings), aes(x = variable, y = value)) +\n  geom_boxplot() +\n  ggtitle(\"Boxplot Before Normalization\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n3.  Investigate outliers, particularly in video views, subscribers, and earnings.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Outlier plot (for 'video.views')\nggplot(youtube_data, aes(x = \"\", y = video.views)) +\n  geom_boxplot() +\n  ggtitle(\"Outliers in Video Views\") +\n  ylab(\"Video Views\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#Outliers plot (for subscribers)\nggplot(youtube_data, aes(x = \"\", y = subscribers)) +\n  geom_boxplot() +\n  ggtitle(\"Outliers in Subscribers\") +\n  ylab(\"Subscribers\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-2.png){width=672}\n:::\n\n```{.r .cell-code}\n#Outliers plot (for earnings)\n# Outliers plot (for highest_yearly_earnings)\nggplot(youtube_data, aes(x = \"\", y = highest_yearly_earnings)) +\n  geom_boxplot() +\n  ggtitle(\"Outliers in Highest Yearly Earnings\") +\n  ylab(\"Highest Yearly Earnings\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-3.png){width=672}\n:::\n:::\n\n\n### 3. Data Description\n\n#### Data Provenance\n\nThe dataset comes from multiple data sources, it was downloaded from Kaggle.\n\n#### Data Collection\n\nThe data was gathered using Python, indicating that it was likely automated, potentially through application programming interface (API) which means the data was likely fetched directly from YouTube's own set of APIs.\n\n#### Data Dictionary\n\n• rank: Position of the YouTube channel based on the number of subscribers\n\n• Youtuber: Name of the YouTube channel\n\n• subscribers: Number of subscribers to the channel\n\n• video views: Total views across all videos on the channel\n\n• category: Category or niche of the channel\n\n• Title: Title of the YouTube channel\n\n• uploads: Total number of videos uploaded on the channel\n\n• Country: Country where the YouTube channel originates\n\n• Abbreviation: Abbreviation of the country\n\n• channel_type: Type of the YouTube channel (e.g., individual, brand)\n\n• video_views_rank: Ranking of the channel based on total video views\n\n• country_rank: Ranking of the channel based on the number of subscribers within its country\n\n• channel_type_rank: Ranking of the channel based on its type (individual or brand)\n\n• video_views_for_the_last_30_days: Total video views in the last 30 days\n\n• lowest_monthly_earnings: Lowest estimated monthly earnings from the channel\n\n• highest_monthly_earnings: Highest estimated monthly earnings from the channel\n\n• lowest_yearly_earnings: Lowest estimated yearly earnings from the channel\n\n• highest_yearly_earnings: Highest estimated yearly earnings from the channel\n\n• subscribers_for_last_30_days: Number of new subscribers gained in the last 30 days\n\n• created_year: Year when the YouTube channel was created\n\n• created_month: Month when the YouTube channel was created\n\n• created_date: Exact date of the YouTube channel's creation\n\n• Gross tertiary education enrollment (%): Percentage of the population enrolled in tertiary education in the country\n\n• Population: Total population of the country\n\n• Unemployment rate: Unemployment rate in the country\n\n• Urban_population: Percentage of the population living in urban areas\n\n• Latitude: Latitude coordinate of the country's location\n\n• Longitude: Longitude coordinate of the country's location\n\n### 4. Next Steps\n\nTo make the dataset more reliable, I'll either fill in or get rid of any missing values. For numbers that span a wide range, I'll use some standardizing methods to make them easier to compare. I'll also take care of any extreme values, or outliers, so they don't throw off our analysis. And to make sure our findings are solid, I'll set a specific siginificance level acting as a \"passing grade\" for our hypothesis tests. Then there will be advanced visualizations and interpretation.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}